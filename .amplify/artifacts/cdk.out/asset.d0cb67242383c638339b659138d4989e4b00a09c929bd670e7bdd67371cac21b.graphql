type UserProfile @aws_iam @aws_cognito_user_pools {
  id: ID!
  email: String!
  role: String!
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

type UserData @aws_iam @aws_cognito_user_pools {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  phone: String!
  address: String!
  birthDate: String!
  gender: String!
  occupation: String!
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

input AmplifyAIConversationTurnErrorInput {
  errorType: String!
  message: String!
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelUserProfileConnection @aws_iam @aws_cognito_user_pools {
  items: [UserProfile]!
  nextToken: String
}

input ModelUserProfileFilterInput {
  id: ModelIDInput
  email: ModelStringInput
  role: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelUserProfileFilterInput]
  or: [ModelUserProfileFilterInput]
  not: ModelUserProfileFilterInput
}

type Query {
  getUserProfile(id: ID!): UserProfile @aws_iam @aws_cognito_user_pools
  listUserProfiles(id: ID, filter: ModelUserProfileFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelUserProfileConnection @aws_iam @aws_cognito_user_pools
  getUserData(id: ID!): UserData @aws_iam @aws_cognito_user_pools
  listUserData(id: ID, filter: ModelUserDataFilterInput, limit: Int, nextToken: String, sortDirection: ModelSortDirection): ModelUserDataConnection @aws_iam @aws_cognito_user_pools
}

input ModelUserProfileConditionInput {
  email: ModelStringInput
  role: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelUserProfileConditionInput]
  or: [ModelUserProfileConditionInput]
  not: ModelUserProfileConditionInput
}

input CreateUserProfileInput {
  id: ID
  email: String!
  role: String!
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

input UpdateUserProfileInput {
  id: ID!
  email: String
  role: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

input DeleteUserProfileInput {
  id: ID!
}

type Mutation {
  createUserProfile(input: CreateUserProfileInput!, condition: ModelUserProfileConditionInput): UserProfile @aws_iam @aws_cognito_user_pools
  updateUserProfile(input: UpdateUserProfileInput!, condition: ModelUserProfileConditionInput): UserProfile @aws_iam @aws_cognito_user_pools
  deleteUserProfile(input: DeleteUserProfileInput!, condition: ModelUserProfileConditionInput): UserProfile @aws_iam @aws_cognito_user_pools
  createUserData(input: CreateUserDataInput!, condition: ModelUserDataConditionInput): UserData @aws_iam @aws_cognito_user_pools
  updateUserData(input: UpdateUserDataInput!, condition: ModelUserDataConditionInput): UserData @aws_iam @aws_cognito_user_pools
  deleteUserData(input: DeleteUserDataInput!, condition: ModelUserDataConditionInput): UserData @aws_iam @aws_cognito_user_pools
}

input ModelSubscriptionUserProfileFilterInput {
  id: ModelSubscriptionIDInput
  role: ModelSubscriptionStringInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionUserProfileFilterInput]
  or: [ModelSubscriptionUserProfileFilterInput]
  email: ModelStringInput
}

type Subscription {
  onCreateUserProfile(filter: ModelSubscriptionUserProfileFilterInput, email: String): UserProfile @aws_subscribe(mutations: ["createUserProfile"]) @aws_iam @aws_cognito_user_pools
  onUpdateUserProfile(filter: ModelSubscriptionUserProfileFilterInput, email: String): UserProfile @aws_subscribe(mutations: ["updateUserProfile"]) @aws_iam @aws_cognito_user_pools
  onDeleteUserProfile(filter: ModelSubscriptionUserProfileFilterInput, email: String): UserProfile @aws_subscribe(mutations: ["deleteUserProfile"]) @aws_iam @aws_cognito_user_pools
  onCreateUserData(filter: ModelSubscriptionUserDataFilterInput): UserData @aws_subscribe(mutations: ["createUserData"]) @aws_iam @aws_cognito_user_pools
  onUpdateUserData(filter: ModelSubscriptionUserDataFilterInput): UserData @aws_subscribe(mutations: ["updateUserData"]) @aws_iam @aws_cognito_user_pools
  onDeleteUserData(filter: ModelSubscriptionUserDataFilterInput): UserData @aws_subscribe(mutations: ["deleteUserData"]) @aws_iam @aws_cognito_user_pools
}

type ModelUserDataConnection @aws_iam @aws_cognito_user_pools {
  items: [UserData]!
  nextToken: String
}

input ModelUserDataFilterInput {
  id: ModelIDInput
  email: ModelStringInput
  firstName: ModelStringInput
  lastName: ModelStringInput
  phone: ModelStringInput
  address: ModelStringInput
  birthDate: ModelStringInput
  gender: ModelStringInput
  occupation: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelUserDataFilterInput]
  or: [ModelUserDataFilterInput]
  not: ModelUserDataFilterInput
}

input ModelUserDataConditionInput {
  email: ModelStringInput
  firstName: ModelStringInput
  lastName: ModelStringInput
  phone: ModelStringInput
  address: ModelStringInput
  birthDate: ModelStringInput
  gender: ModelStringInput
  occupation: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelUserDataConditionInput]
  or: [ModelUserDataConditionInput]
  not: ModelUserDataConditionInput
}

input CreateUserDataInput {
  id: ID
  email: String!
  firstName: String!
  lastName: String!
  phone: String!
  address: String!
  birthDate: String!
  gender: String!
  occupation: String!
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

input UpdateUserDataInput {
  id: ID!
  email: String
  firstName: String
  lastName: String
  phone: String
  address: String
  birthDate: String
  gender: String
  occupation: String
  createdAt: AWSDateTime
  updatedAt: AWSDateTime
}

input DeleteUserDataInput {
  id: ID!
}

input ModelSubscriptionUserDataFilterInput {
  id: ModelSubscriptionIDInput
  email: ModelSubscriptionStringInput
  firstName: ModelSubscriptionStringInput
  lastName: ModelSubscriptionStringInput
  phone: ModelSubscriptionStringInput
  address: ModelSubscriptionStringInput
  birthDate: ModelSubscriptionStringInput
  gender: ModelSubscriptionStringInput
  occupation: ModelSubscriptionStringInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionUserDataFilterInput]
  or: [ModelSubscriptionUserDataFilterInput]
}
